#!/usr/bin/env bash
set -eou pipefail

tmp_dir="$(mkdir -p /tmp/email && echo '/tmp/email')"
report=''
distro_list=''
html=''
date_override=''
body_override=''

usage(){
  echo "Usage: email: ${0} [--report <file_path>] [--distro-list <'distro@list.com'>]" 1>&2
  echo "                   [--html] [--date-override <date>] [--body-override <body>]" 1>&2
  echo "       Do not use --html and body override in the same call.                 " 1>&2
  exit 1
}
while [[ $# -gt 0 ]]; do
  case "$1" in
    -r|--report)        report="$2";        shift ;;
    -l|--distro-list)   distro_list="$2";   shift ;;
    -h|--html)          html='y' ;;
    -d|--date-override) date_override="$2"; shift;;
    -b|--body-override) body_override="$2"; shift;;
    *) break ;;
  esac
  shift
done
if [[ -z $report ]] || [[ -z $distro_list ]]; then usage; fi
if [[ ! -z $html ]] && [[ ! -z $body_override ]]; then usage; fi

mutt_setup(){
  if [[ $(whoami) == 'root' ]]; then
    local home_dir='/root'
  elif [[ $(whoami) == 'sbx_'* ]]; then
    local home_dir="/home/$(whoami)"
  elif [[ $(whoami) == 'skilbjo' ]]; then
    echo 'Easy, big guy...' && exit 1
  fi

  local muttrc="set realname  = 'Iris'
set from      = '${email}'
set imap_user = '${email}'
set imap_pass = '${email_pw}'
set smtp_pass = '${email_pw}'
set smtp_url  = 'smtps://"$(echo "$email" | sed 's/@.*//')"@smtp.gmail.com:465/'
set folder    = 'imaps://imap.gmail.com:993'
set spoolfile = '+INBOX'
set postponed = '+[Gmail]/Drafts'
set move      = 'no'
set record    = '+sent'
set copy      = 'no'
set imap_keepalive = 900
set crypt_use_gpgme     = 'no'
set header_cache        = ~/.mutt/cache/headers
set message_cachedir    = ~/.mutt/cache/bodies
set certificate_file    = ~/.mutt/certificates"

  echo "$muttrc" >"${home_dir}/.muttrc"
}

create_mime_email(){
  local report="$1"
  local report_name="$(echo "$report" | sed 's/\.[^.]*$//')"
  local distro_list="$2"
  local html="$3"
  local date_override="$4"
  local body_override="$5"

  local _date=''
  local body=''
  local attachment=''

  if [[ $(whoami) == 'root' ]] || [[ $(whoami) == 'sbx_'* ]]; then
    attachment="$(base64 -w 0 "$report")"
  elif [[ $(whoami) == 'skilbjo' ]]; then
    attachment="$(gbase64 -w 0 "$report")"
  fi

  if [[ -z $date_override ]]; then _date="$(date +%F)"; else _date="$date_override"; fi
  local subject="Iris report for $report_name for $_date"
  if [[ -z $html ]]; then
    body="Iris report for ${_date}. See attached file."
  else
    body="Iris report for ${_date}: "$(cat "$(echo "$report" | sed 's/\.[^.]*$//')".html | sed 's/\"//g' | tr -d "\n\r")""
  fi

  local mime_email="$(echo "From: ${email}
To: ${distro_list}
Subject: ${subject}
MIME-Version: 1.0
Content-Type: Multipart/Mixed; boundary=\"NextPart\"

--NextPart
Content-Type: text/html;

${body}

--NextPart
Content-Type: text/csv;
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename=${report}
${attachment}
--NextPart--")"

  if [[ ! -z $body_override ]]; then
    body="Iris report for ${_date}. ${body_override}."
  local mime_email="$(echo "From: ${email}
To: ${distro_list}
Subject: ${subject}
MIME-Version: 1.0
Content-Type: text/html;

${body}")"
  fi

  echo "$mime_email"
}

aws_ses(){
  local report="$1"
  local report_name="$(echo "$report" | sed 's/\.[^.]*$//')"
  local distro_list="$2"
  local html="$3"
  local date_override="$4"
  local body_override="$5"
  local msg="$(create_mime_email "$report" "$distro_list" "$html" "$date_override" "$body_override")"

  jq -n --arg data "$msg" '{Data: $data}' >"${tmp_dir}/${report_name}.json"

  if [[ $(whoami) == 'root' ]]; then
    aws ses \
      send-raw-email \
      --region us-east-1 \
      --raw-message "file://${tmp_dir}/${report_name}.json"
  elif [[ $(whoami) == 'sbx_'* ]]; then
    # Query rsults with lines longer than 8 fail on AWS Lambda
    # --raw-message "fileb://" results in
    #   "'in <string>' requires string as left operand, not int"
    # mutt also fails, with 'Couldn't lock /sent' and
    #   '241 Segmentation fault (core dumped) | mutt -e 'set content_type=text/html' -s "Iris report for $report on $(date +%F)" -a "/tmp/${report}.csv" -- "$distro_list"'
    aws ses \
      send-raw-email \
      --region us-east-1 \
      --raw-message "file://${tmp_dir}/${report_name}.json"
  elif [[ $(whoami) == 'skilbjo' ]]; then
    aws ses \
      send-raw-email \
      --profile personal \
      --region us-east-1 \
      --raw-message "file://${tmp_dir}/${report_name}.json"
  else
    >&2 echo "user is: $(whoami), add to setup fn"
  fi
}

curl_email(){
  local report="$1"
  local report_name="$(basename "$report" | sed 's/\.[^.]*$//')"
  local distro_list="$2"
  local html="$3"
  local date_override="$4"
  local body_override="$5"
  local msg="$(create_mime_email "$report" "$distro_list" "$html" "$date_override" "$body_override")"

  echo "$msg" >"${tmp_dir}/${report_name}.txt"

  curl \
    --retry 3 \
    --ssl-reqd \
    --url 'smtps://smtp.gmail.com:465' \
    --mail-from "$email" \
    --mail-rcpt "$distro_list" \
    --user "${email}:${email_pw}" \
    --upload-file "${tmp_dir}/${report_name}.txt"
  sleep 2
}

mutt_email() {
  local report="$1"
  local report_name="$(basename "$report" | sed 's/\.[^.]*$//')"
  local distro_list="$2"
  local html="$3"
  local date_override="$4"

  local body=''
  local attachment=''

  if [[ -z $date_override ]]; then _date="$(date +%F)"; else _date="$date_override"; fi
  local subject="Iris report for $report_name for $_date"
  if [[ -z $html ]]; then
    body="Iris report for ${_date}. See attached file."
  else
    body="Iris report for ${_date}: "$(cat "$(echo "$report" | sed 's/\.[^.]*$//')".html | sed 's/\"//g' | tr -d "\n\r")""
  fi

  if [[ $(whoami) == 'root' ]] || [[ $(whoami) == 'sbx_'* ]]; then
    attachment="$(base64 -w 0 "$report")"
  elif [[ $(whoami) == 'skilbjo' ]]; then
    attachment="$(gbase64 -w 0 "$report")"
  fi

  echo "$body" | \
    mutt -e 'set content_type=text/html' \
      -s "$subject" \
      -a "$report" \
      -- "$distro_list"
  sleep 2
}

email(){
  local report="$1"
  local distro_list="$2"
  local html="$3"
  local date_override="$4"
  local body_override="$5"

  if [[ $(whoami) == 'root' ]]; then            # docker (k8s, odroid, pi)
    curl_email "$report" "$distro_list" "$html" "$date_override" "$body_override"
  elif [[ $(whoami) == 'sbx_'* ]]; then         # AWS Lambda
    curl_email "$report" "$distro_list" "$html" "$date_override" "$body_override"
  elif [[ $(whoami) == 'skilbjo' ]]; then       # mac OS
    curl_email "$report" "$distro_list" "$html" "$date_override" "$body_override"
    #mutt_email "$report" "$distro_list" "$html" "$date_override" "$body_override"
  fi
}

email "$report" "$distro_list" "$html" "$date_override" "$body_override"
